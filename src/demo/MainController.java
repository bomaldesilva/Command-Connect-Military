/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package demo;

import java.awt.event.ActionEvent;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.BadLocationException;
/**
 *
 * @author Insight
 */
@SuppressWarnings("empty-statement")
public class MainController extends javax.swing.JFrame implements DataSubmiter{
    private Subject subject;
    int soldiersCount;
    int ammoCount;
    int valueOfHeli,valueOfSub,valueOfTank;
    /**
     * Creates new form MainController
     */
    public MainController(){
        initComponents();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cBoxSelectDefence = new javax.swing.JComboBox<>();
        btnCollectInfo = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        lblFual = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaForSendAll = new javax.swing.JTextArea();
        mainSlider = new javax.swing.JSlider();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtRecivedMsg = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        warningTxtArea = new javax.swing.JTextArea();
        cbxPrivateMsg = new javax.swing.JCheckBox();
        btnSendToAll = new javax.swing.JButton();
        cBoxSelected = new javax.swing.JComboBox<>();
        lblSoldiersCount = new javax.swing.JLabel();
        lblFualAmount = new javax.swing.JLabel();
        lblAmmoCount = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(214, 202, 186));

        cBoxSelectDefence.setBackground(new java.awt.Color(0, 101, 0));
        cBoxSelectDefence.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        cBoxSelectDefence.setForeground(new java.awt.Color(255, 255, 255));
        cBoxSelectDefence.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Defence", "Helicopter", "Submarine", "Tank", " " }));
        cBoxSelectDefence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cBoxSelectDefenceActionPerformed(evt);
            }
        });

        btnCollectInfo.setBackground(new java.awt.Color(0, 101, 0));
        btnCollectInfo.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        btnCollectInfo.setForeground(new java.awt.Color(255, 255, 255));
        btnCollectInfo.setText("Collect Information");
        btnCollectInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCollectInfoActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jCheckBox1.setText("Area Clear");
        jCheckBox1.setOpaque(false);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel1.setText("Soldier Count");

        lblFual.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        lblFual.setText("Fuel Amount");

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel3.setText("Ammo Amount");

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel4.setText("Position");

        jScrollPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 102), new java.awt.Color(51, 102, 0), new java.awt.Color(51, 102, 0), new java.awt.Color(255, 255, 0)));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N

        txtAreaForSendAll.setBackground(new java.awt.Color(0, 0, 0));
        txtAreaForSendAll.setColumns(20);
        txtAreaForSendAll.setForeground(new java.awt.Color(255, 255, 51));
        txtAreaForSendAll.setRows(5);
        txtAreaForSendAll.setCaretColor(new java.awt.Color(102, 102, 0));
        jScrollPane1.setViewportView(txtAreaForSendAll);

        mainSlider.setMajorTickSpacing(Integer.parseInt(java.util.ResourceBundle.getBundle("demo/Bundle").getString("k")));
        mainSlider.setMinorTickSpacing(Integer.parseInt(java.util.ResourceBundle.getBundle("demo/Bundle").getString("l")));
        mainSlider.setPaintLabels(true);
        mainSlider.setPaintTicks(true);
        mainSlider.setOpaque(false);
        mainSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                mainSliderStateChanged(evt);
            }
        });

        jScrollPane3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 102), new java.awt.Color(51, 102, 0), new java.awt.Color(51, 102, 0), new java.awt.Color(255, 255, 0)));
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N

        txtRecivedMsg.setBackground(new java.awt.Color(0, 0, 0));
        txtRecivedMsg.setColumns(20);
        txtRecivedMsg.setForeground(new java.awt.Color(255, 255, 51));
        txtRecivedMsg.setRows(5);
        txtRecivedMsg.setCaretColor(new java.awt.Color(102, 102, 0));
        txtRecivedMsg.setEnabled(false);
        jScrollPane3.setViewportView(txtRecivedMsg);

        jScrollPane4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 102), new java.awt.Color(51, 102, 0), new java.awt.Color(51, 102, 0), new java.awt.Color(255, 255, 0)));
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane4.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N

        warningTxtArea.setBackground(new java.awt.Color(0, 0, 0));
        warningTxtArea.setColumns(20);
        warningTxtArea.setForeground(new java.awt.Color(255, 255, 51));
        warningTxtArea.setRows(5);
        warningTxtArea.setCaretColor(new java.awt.Color(102, 102, 0));
        jScrollPane4.setViewportView(warningTxtArea);

        cbxPrivateMsg.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        cbxPrivateMsg.setText("Send Private");
        cbxPrivateMsg.setOpaque(false);
        cbxPrivateMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxPrivateMsgActionPerformed(evt);
            }
        });

        btnSendToAll.setBackground(new java.awt.Color(0, 101, 0));
        btnSendToAll.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        btnSendToAll.setForeground(new java.awt.Color(255, 255, 255));
        btnSendToAll.setText("Send");
        btnSendToAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendToAllActionPerformed(evt);
            }
        });

        cBoxSelected.setBackground(new java.awt.Color(0, 101, 0));
        cBoxSelected.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        cBoxSelected.setForeground(new java.awt.Color(255, 255, 255));
        cBoxSelected.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Helicopter", "Submarine", "Tank" }));
        cBoxSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cBoxSelectedActionPerformed(evt);
            }
        });

        lblSoldiersCount.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        lblSoldiersCount.setText("---------");

        lblFualAmount.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        lblFualAmount.setText("---------");

        lblAmmoCount.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        lblAmmoCount.setText("---------");

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel5.setText("Main Controller");

        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel7.setText("Send");

        jLabel8.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel8.setText("Receive");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblFual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cBoxSelectDefence, 0, 130, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSoldiersCount)
                                    .addComponent(lblFualAmount)
                                    .addComponent(lblAmmoCount)
                                    .addComponent(btnCollectInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(cbxPrivateMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cBoxSelected, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jCheckBox1)
                                .addGap(29, 29, 29))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(mainSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(btnSendToAll, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(101, 101, 101))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cBoxSelectDefence, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCollectInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(lblSoldiersCount))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFual)
                            .addComponent(lblFualAmount))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(lblAmmoCount))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxPrivateMsg)
                    .addComponent(jLabel4)
                    .addComponent(cBoxSelected, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(mainSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSendToAll)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cBoxSelectDefenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cBoxSelectDefenceActionPerformed
        subject.setIndexToDefence(cBoxSelectDefence.getSelectedIndex());
    }//GEN-LAST:event_cBoxSelectDefenceActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
         if(jCheckBox1.isSelected()){
            subject.clearAll(true);}
         else{
            subject.clearAll(false);}
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void mainSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_mainSliderStateChanged
    // TODO add your handling code here:
        int value = mainSlider.getValue();
        subject.enableOps(value);
    }//GEN-LAST:event_mainSliderStateChanged

    private void btnSendToAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendToAllActionPerformed
            String msgToAll = txtAreaForSendAll.getText();
            if(!"".equals(msgToAll)){
            LocalDateTime currentDateTime =LocalDateTime.now();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM-dd HH:mm");
            String dateTime = currentDateTime.format(formatter);
            subject.sendAll("Main Controller:-"+msgToAll+".\t"+dateTime+"\n");
            txtAreaForSendAll.setText("");
            if(cbxPrivateMsg.isSelected()){
                switch(cBoxSelected.getSelectedIndex()){
                    case 0:warningTxtArea.append("Helicopter :-"+msgToAll+".\t"+dateTime+"\n");break;
                    case 1:warningTxtArea.append("Submarine :-"+msgToAll+".\t"+dateTime+"\n");break;
                    case 2:warningTxtArea.append("Tank :-"+msgToAll+".\t"+dateTime+"\n");break;}
            }else{
                warningTxtArea.append("All :-"+msgToAll+".\t"+dateTime+"\n");}
            }
    }//GEN-LAST:event_btnSendToAllActionPerformed

    private void cbxPrivateMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxPrivateMsgActionPerformed
        subject.sendPrivate(cbxPrivateMsg.isSelected());
       
    }//GEN-LAST:event_cbxPrivateMsgActionPerformed

    private void cBoxSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cBoxSelectedActionPerformed
        subject.setIndex(cBoxSelected.getSelectedIndex());
    }//GEN-LAST:event_cBoxSelectedActionPerformed

    private void btnCollectInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCollectInfoActionPerformed
        soldiersCount= subject.setSoldiersCount();
        ammoCount = subject.setAmmoCount();
        if(soldiersCount==-1||ammoCount<=-1||soldiersCount<-1){
            lblSoldiersCount.setText("---------");
            lblAmmoCount.setText("---------");}
        else{
        lblSoldiersCount.setText(String.valueOf(soldiersCount));
        lblAmmoCount.setText(String.valueOf(ammoCount));}
        switch (cBoxSelectDefence.getSelectedIndex()){
            case 0:
                lblFualAmount.setText("---------");
                break;
            case 1:
                lblFualAmount.setText(String.valueOf(valueOfHeli));
                break;
            case 2:
                lblFualAmount.setText(String.valueOf(valueOfSub));
                break;
            default:
                lblFualAmount.setText(String.valueOf(valueOfTank));
                break;
        }
    }//GEN-LAST:event_btnCollectInfoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainController().setVisible(true);
            }
        });
    }
    
    public void setSubject(Subject ob){
        this.subject=ob;}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCollectInfo;
    private javax.swing.JButton btnSendToAll;
    private javax.swing.JComboBox<String> cBoxSelectDefence;
    private javax.swing.JComboBox<String> cBoxSelected;
    private javax.swing.JCheckBox cbxPrivateMsg;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblAmmoCount;
    private javax.swing.JLabel lblFual;
    private javax.swing.JLabel lblFualAmount;
    private javax.swing.JLabel lblSoldiersCount;
    private javax.swing.JSlider mainSlider;
    private javax.swing.JTextArea txtAreaForSendAll;
    private javax.swing.JTextArea txtRecivedMsg;
    private javax.swing.JTextArea warningTxtArea;
    // End of variables declaration//GEN-END:variables

    @Override
    public void submitData(String msg){
        LocalDateTime currentDateTime =LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM-dd HH:mm");
        String dateTime = currentDateTime.format(formatter);
        txtRecivedMsg.append(msg+".\t"+dateTime+"\n");
    }

    @Override
    public void sendEnergyValue(String warningMsg) {
        LocalDateTime currentDateTime =LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM-dd HH:mm");
        String dateTime = currentDateTime.format(formatter);
        warningTxtArea.append(warningMsg+".\t"+dateTime+"\n");
    }

    @Override
    public void sendOxygenValue(String oxygenMsg) {
        LocalDateTime currentDateTime =LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM-dd HH:mm");
        String dateTime = currentDateTime.format(formatter);
        warningTxtArea.append(oxygenMsg+".\t"+dateTime+"\n");
    }

    @Override
    public void sendFuelAmount(int index,int value) {
        switch (index) {
            case 0:
                this.valueOfHeli=value;
                break;
            case 1:
                this.valueOfSub=value;
                break;
            default:
                this.valueOfTank=value;
                break;
        }
    }
 }
