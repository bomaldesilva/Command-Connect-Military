/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package demo;

import java.awt.Color;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author Insight
 */
public class Helicopter extends javax.swing.JFrame implements Observer{
    private DataSubmiter data;
    private int valueOfStage;
    /**
     * Creates new form Helicopter
     */
    public Helicopter() {
        initComponents();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpn1 = new javax.swing.JPanel();
        lblArea = new javax.swing.JLabel();
        btnShoot = new javax.swing.JButton();
        btnLaser = new javax.swing.JButton();
        btnMissile = new javax.swing.JButton();
        spAmmoCount = new javax.swing.JSpinner();
        spSoldiersCount = new javax.swing.JSpinner();
        energySlider = new javax.swing.JSlider();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtReciver = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        cBoxPosition = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(630, 397));

        jpn1.setBackground(new java.awt.Color(214, 202, 186));
        jpn1.setPreferredSize(new java.awt.Dimension(555, 370));

        lblArea.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lblArea.setForeground(new java.awt.Color(204, 0, 51));
        lblArea.setText("Area Not Cleared !");

        btnShoot.setBackground(new java.awt.Color(0, 101, 0));
        btnShoot.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        btnShoot.setForeground(new java.awt.Color(255, 255, 255));
        btnShoot.setText("Shoot");
        btnShoot.setEnabled(false);

        btnLaser.setBackground(new java.awt.Color(0, 101, 0));
        btnLaser.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        btnLaser.setForeground(new java.awt.Color(255, 255, 255));
        btnLaser.setText("Laser Operation");
        btnLaser.setEnabled(false);
        btnLaser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLaserActionPerformed(evt);
            }
        });

        btnMissile.setBackground(new java.awt.Color(0, 101, 0));
        btnMissile.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        btnMissile.setForeground(new java.awt.Color(255, 255, 255));
        btnMissile.setText("Missile Operartion");
        btnMissile.setEnabled(false);

        spAmmoCount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        spSoldiersCount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        energySlider.setMajorTickSpacing(Integer.parseInt(java.util.ResourceBundle.getBundle("demo/Bundle").getString("k")));
        energySlider.setMinorTickSpacing(Integer.parseInt(java.util.ResourceBundle.getBundle("demo/Bundle").getString("l")));
        energySlider.setOrientation(javax.swing.JSlider.VERTICAL);
        energySlider.setPaintLabels(true);
        energySlider.setPaintTicks(true);
        energySlider.setOpaque(false);
        energySlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                energySliderStateChanged(evt);
            }
        });

        txtReciver.setColumns(20);
        txtReciver.setRows(5);
        txtReciver.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtReciver.setEnabled(false);
        txtReciver.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(txtReciver);

        jTextField1.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 101, 0));
        jButton4.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Send");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        cBoxPosition.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        cBoxPosition.setText("Position");
        cBoxPosition.setOpaque(false);
        cBoxPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cBoxPositionActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel1.setText("Energy");

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel2.setText("Ammo Count");

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel3.setText("Soldier Count");

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel4.setText("Helicopter");

        javax.swing.GroupLayout jpn1Layout = new javax.swing.GroupLayout(jpn1);
        jpn1.setLayout(jpn1Layout);
        jpn1Layout.setHorizontalGroup(
            jpn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpn1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jpn1Layout.createSequentialGroup()
                            .addGroup(jpn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jpn1Layout.createSequentialGroup()
                                    .addComponent(btnShoot, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnMissile, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel3))
                                .addGroup(jpn1Layout.createSequentialGroup()
                                    .addComponent(btnLaser, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(48, 48, 48)
                                    .addComponent(cBoxPosition)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jpn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(spSoldiersCount, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(spAmmoCount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpn1Layout.createSequentialGroup()
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1))
                    .addComponent(lblArea, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jpn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(energySlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(16, 16, 16))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpn1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(243, 243, 243))
        );
        jpn1Layout.setVerticalGroup(
            jpn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpn1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblArea))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpn1Layout.createSequentialGroup()
                        .addGroup(jpn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnShoot)
                            .addComponent(btnMissile)
                            .addComponent(jLabel3)
                            .addComponent(spSoldiersCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLaser)
                            .addComponent(cBoxPosition)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spAmmoCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jpn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4)))
                    .addComponent(energySlider, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpn1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpn1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLaserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLaserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLaserActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(data!=null){
        String msg = jTextField1.getText();
        LocalDateTime currentDateTime =LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM-dd HH:mm");
        String dateTime = currentDateTime.format(formatter);
        txtReciver.append(msg+".\t"+dateTime+"\n");
        data.submitData("Helicopter : "+msg);}
    }//GEN-LAST:event_jButton4ActionPerformed

    private void cBoxPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cBoxPositionActionPerformed
        if(cBoxPosition.isSelected()==false){
        btnShoot.setEnabled(false);
        btnMissile.setEnabled(false);
        btnLaser.setEnabled(false);}
        else{
        btnShoot.setEnabled(20<valueOfStage);
        btnMissile.setEnabled(40<valueOfStage);
        btnLaser.setEnabled(70<valueOfStage);}
    }//GEN-LAST:event_cBoxPositionActionPerformed

    private void energySliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_energySliderStateChanged
       int value=energySlider.getValue();
       int i=0;
       data.sendFuelAmount(i,value);
        String msgToMain = null;
        switch (value) {
            case 9:
                msgToMain="Helicopter :- Energy is less than 10 !";
                break;
            case 19:
                msgToMain="Helicopter :- Energy is less than 20 !";
                break;
            case 29:
                msgToMain="Helicopter :- Energy is less than 30 !";
                break;
            case 49:
                msgToMain="Helicopter :- Energy is less than 50 !";
                break;
            case 69:
                msgToMain="Helicopter :- Energy is less than 70 !";
                break;
            case 100:
                msgToMain="Helicopter :- Energy is full !";
                break;
            default:
                break;
        }
        if(msgToMain!=null){
        data.sendEnergyValue(msgToMain);}
    }//GEN-LAST:event_energySliderStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Helicopter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Helicopter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Helicopter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Helicopter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Helicopter().setVisible(true);
            }
        });
    }
    public void setDataSubmiter(DataSubmiter data){
        this.data=data;}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLaser;
    private javax.swing.JButton btnMissile;
    private javax.swing.JButton btnShoot;
    private javax.swing.JCheckBox cBoxPosition;
    private javax.swing.JSlider energySlider;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel jpn1;
    private javax.swing.JLabel lblArea;
    private javax.swing.JSpinner spAmmoCount;
    private javax.swing.JSpinner spSoldiersCount;
    private javax.swing.JTextArea txtReciver;
    // End of variables declaration//GEN-END:variables

    @Override
    public void updateArea(boolean select) {
       if(select){
         lblArea.setForeground(new Color(0,102,0));
         lblArea.setText("Area Cleared");}
       else{
         lblArea.setForeground(new Color(204,0,51));
         lblArea.setText("Area Not Cleared !");}
    }

    @Override
    public void updateOperation(int value) {
        if(cBoxPosition.isSelected()){
        btnShoot.setEnabled(20<value);
        btnMissile.setEnabled(40<value);
        btnLaser.setEnabled(70<value);}
        this.valueOfStage=value;
    }

    @Override
    public void sendMsg(String msgToAll) {
        txtReciver.append(msgToAll);
    }

    @Override
    public void sendToObserver(String msgPrivate) {
        txtReciver.append(msgPrivate);
    }

    @Override
    public int getSoldiersCount() {
         return (int)spSoldiersCount.getValue();
    }

    @Override
    public int getAmmoCount() {
         return (int)spAmmoCount.getValue();
    }
}
